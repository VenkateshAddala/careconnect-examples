<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements. See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version
    2.0 (the "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0 Unless required by
    applicable law or agreed to in writing, software distributed under the
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    CONDITIONS OF ANY KIND, either express or implied. See the License for
    the specific language governing permissions and limitations under the
    License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  
    <groupId>uk.nhs.careconnect.examples</groupId>
    <artifactId>hapi-jpa-server-springboot</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <parent>
        <groupId>uk.nhs.careconnect.examples</groupId>
        <artifactId>java-examples</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>


  <properties>
    	<category>Rest</category>


  </properties>


  <dependencies>
    <!-- Spring Boot -->
    <dependency>
      	<groupId>org.springframework.boot</groupId>
      	<artifactId>spring-boot-starter-web</artifactId>
    </dependency>
   <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-actuator</artifactId>

    </dependency>


   <!-- HL7 HAPI FHIR -->
	      <dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
			<version>${hapi-fhir-version}</version>
              <exclusions>
                  <exclusion>
                      <groupId>org.slf4j</groupId>
                      <artifactId>slf4j-log4j12</artifactId>
                  </exclusion>
                  <exclusion>
                      <groupId>log4j</groupId>
                      <artifactId>log4j</artifactId>
                  </exclusion>
              </exclusions>
          </dependency>
	    <dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu2</artifactId>
			<version>${hapi-fhir-version}</version>
		</dependency>

      <!-- This dependency includes the JPA server itself, which is packaged separately from the rest of HAPI FHIR -->
      <dependency>
          <groupId>ca.uhn.hapi.fhir</groupId>
          <artifactId>hapi-fhir-jpaserver-base</artifactId>
          <version>${hapi-fhir-version}</version>
      </dependency>

      <!-- This dependency is used for the "FHIR Tester" web app overlay -->
      <dependency>
          <groupId>ca.uhn.hapi.fhir</groupId>
          <artifactId>hapi-fhir-testpage-overlay</artifactId>
          <version>${hapi-fhir-version}</version>
          <type>war</type>
          <scope>provided</scope>
      </dependency>

      <dependency>
          <groupId>ca.uhn.hapi.fhir</groupId>
          <artifactId>hapi-fhir-testpage-overlay</artifactId>
          <version>${hapi-fhir-version}</version>
          <classifier>classes</classifier>
          <scope>provided</scope>
      </dependency>


		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		</dependency>


        <dependency>
            <groupId>io.hawt</groupId>
            <artifactId>hawtio-springboot</artifactId>
            <version>${hawtio.version}</version>
        </dependency>

	    <dependency>
	        <groupId>io.hawt</groupId>
	        <artifactId>hawtio-core</artifactId>
	        <version>${hawtio.version}</version>
	    </dependency>
	    
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>

    <!--
      <dependency>
          <groupId>io.hawt</groupId>
          <artifactId>hawtio-insight-log</artifactId>
          <version>${hawtio.version}</version>
      </dependency>
   	-->
        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>



      <!-- Needed for JEE/Servlet support -->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>

      </dependency>

      <!-- If you are using HAPI narrative generation, you will need to include Thymeleaf as well. Otherwise the following can be omitted. -->
      <dependency>
          <groupId>org.thymeleaf</groupId>
          <artifactId>thymeleaf</artifactId>
          <version>${thymeleaf-version}</version>
      </dependency>
      <dependency>
          <groupId>org.thymeleaf</groupId>
          <artifactId>thymeleaf-spring4</artifactId>
          <version>${thymeleaf-version}</version>
      </dependency>

      <!-- Spring Web is used to deploy the server to a web container. -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>

      </dependency>

      <!-- Used for CORS support -->
      <dependency>
          <groupId>org.ebaysf.web</groupId>
          <artifactId>cors-filter</artifactId>
          <version>${ebay_cors_filter_version}</version>
          <exclusions>
              <exclusion>
                  <artifactId>servlet-api</artifactId>
                  <groupId>javax.servlet</groupId>
              </exclusion>
          </exclusions>
      </dependency>


      <!-- databases -->

      <!-- You may not need this if you are deploying to an application server which provides database connection pools itself. -->
      <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-dbcp2</artifactId>
          <version>2.1.1</version>
      </dependency>

      <!-- This example uses Derby embedded database. If you are using another database such as Mysql or Oracle, you may omit the following dependencies and replace them with an appropriate database client
                  dependency for your database platform. -->
      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derby</artifactId>
          <version>${derby_version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derbynet</artifactId>
          <version>${derby_version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derbyclient</artifactId>
          <version>${derby_version}</version>
      </dependency>


      <dependency>
          <groupId>com.phloc</groupId>
          <artifactId>phloc-schematron</artifactId>
          <version>${phloc_schematron_version}</version>
      </dependency>

      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.12</version>
          <scope>test</scope>
          <exclusions>
              <exclusion>
                  <artifactId>hamcrest-core</artifactId>
                  <groupId>org.hamcrest</groupId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>java-hamcrest</artifactId>
          <version>2.0.0.0</version>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjweaver</artifactId>

      </dependency>

  </dependencies>
  
  

  <build>
      <finalName>careconnect-hapi-jpa-dstu2-springboot</finalName>
    <plugins>
    	 <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      	 <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>swagger-ui</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/swagger-api/swagger-ui/archive/v2.1.4.tar.gz</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                
                </executions>
            </plugin>
            <!-- Load the Swagger-UI components into the src/main/webapp/ directory to enable
            viewing/testing of the API routes. Accessible at http://<host>:<port>/swagger. -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/src/main/resources/static</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/swagger-ui-2.1.4/dist</directory>
                                    <directory>${basedir}/src/main/resources/swagger</directory>
                                   <!--   <directory>${basedir}/src/main/resources/hawtio</directory>  -->
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        <!-- The configuration here tells the WAR plugin to include the FHIR Tester overlay. You can omit it if you are not using that feature.-->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.6</version>
            <configuration>
                <archive>
                    <manifestEntries>
                        <Build-Time>${maven.build.timestamp}</Build-Time>
                    </manifestEntries>
                </archive>
                <overlays>
                    <overlay>
                        <groupId>ca.uhn.hapi.fhir</groupId>
                        <artifactId>hapi-fhir-testpage-overlay</artifactId>
                    </overlay>
                </overlays>
                <!-- The overlay don't appear to work with Spring Boot so will include the webapp folder directly -->

              <!-- This appears to be wrong <webXml>src/main/resources/web.xml</webXml> -->
            </configuration>
        </plugin>
    </plugins>
  </build>

</project>